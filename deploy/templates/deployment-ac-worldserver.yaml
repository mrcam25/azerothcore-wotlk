apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.images.ac_worldserver.name }}
  namespace: {{ .Values.app.name }}
  labels:
    buildDate: {{ now | date "2006-01-02T15.04.05" }}
    containerName: {{ .Values.images.ac_worldserver.name }}
spec:
  selector:
    matchLabels: 
      app: {{ .Values.images.ac_worldserver.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.images.ac_worldserver.name }}
    spec:
      containers:
        - name: {{ .Values.images.ac_worldserver.name }}
          image: {{ .Values.images.ac_worldserver.image }}
          command: ["/bin/bash", "-c", "screen -S worldserver -dm /azerothcore/entrypoint.sh worldserver && screen -r worldserver"]
          stdin_open: true
          tty: true
          imagePullPolicy: {{ .Values.images.ac_worldserver.pullPolicy }}
          ports:
          - containerPort: 8085
            name: world-external
          - containerPort: 7878
            name: soap-external
          envFrom:
          - configMapRef:
              name: "{{ .Values.images.ac_worldserver.name }}-cm"
          volumeMounts:
          - name: env
            mountPath: /conf/dist/env.ac
            subPath: env.ac
          - name: ac-client-data-volume
            mountPath: /azerothcore/env/dist/data
      volumes:
      - name: ac-client-data-volume
        persistentVolumeClaim:
          claimName: ac-client-data-pvc
      - name: env
        configMap:
          name: "{{ .Values.images.ac_worldserver.name }}-cm"
      securityContexts:
        fsGroup: 1000
        runAsUser: acore
        runAsGroup: 1000
